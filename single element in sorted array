class Solution {
public:
    int singleNonDuplicate(vector<int>& nums) {

         int low = 0, high = nums.size() - 1;

    while (low < high) {
        int mid = low + (high - low) / 2;

        // Ensure mid is even to compare with the next element
        if (mid % 2 == 1) {
            mid--;
        }

        if (nums[mid] == nums[mid + 1]) {
            // The single element is in the second half
            low = mid + 2;
        } else {
            // The single element is in the first half
            high = mid;
        }
    }

    return nums[low];
    }
};
